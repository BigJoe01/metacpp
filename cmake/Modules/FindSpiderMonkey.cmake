# Find the javascript header files and libraries
# Once done this will define
#
#  SPIDERMONKEY_INCLUDE_DIR    - where to find jsapi.h, etc.
#  SPIDERMONKEY_LIBRARIES      - SpiderMonkey libraries to link against
#  SPIDERMONKEY_FOUND          - True if SpiderMonkey found.
#

SET(SPIDERMONKEY_PossibleIncludePaths
    "/usr/include/"
    "/usr/local/include/"
  )

find_path(SPIDERMONKEY_INCLUDE_DIR
  NAMES jsapi.h
  PATHS
   ${SPIDERMONKEY_PossibleIncludePaths}
  PATH_SUFFIXES
    mozjs-38 mozjs-31 mozjs-24
    )

find_library(
    SPIDERMONKEY_BASE_LIBRARY
    NAMES mozjs-38 mozjs-31 mozjs-24)

set(SPIDERMONKEY_LIBRARIES ${SPIDERMONKEY_BASE_LIBRARY})
set(CMAKE_REQUIRED_INCLUDES ${SPIDERMONKEY_INCLUDE_DIR})
set(CMAKE_REQUIRED_DEFINITIONS ${SPIDERMONKEY_DEFINITIONS})
list(APPEND CMAKE_REQUIRED_LIBRARIES ${SPIDERMONKEY_LIBRARIES})

list(REMOVE_ITEM CMAKE_REQUIRED_LIBRARIES ${SPIDERMONKEY_LIBRARIES})
list(REMOVE_DUPLICATES CMAKE_REQUIRED_LIBRARIES)
mark_as_advanced(SPIDERMONKEY_INCLUDE_DIR SPIDERMONKEY_LIBRARIES SPIDERMONKEY_BASE_LIBRARY)

if (SPIDERMONKEY_INCLUDE_DIR AND SPIDERMONKEY_BASE_LIBRARY)
    set(SPIDERMONKEY_FOUND TRUE)
    message(STATUS "Found SpiderMonkey: ${SPIDERMONKEY_LIBRARIES}")
    message(STATUS "   include: ${SPIDERMONKEY_INCLUDE_DIR}")
else(SPIDERMONKEY_INCLUDE_DIR AND SPIDERMONKEY_BASE_LIBRARY)
    set(SPIDERMONKEY_FOUND FALSE)
    if(SPIDERMONKEY_FIND_REQUIRED)
        message(FATAL_ERROR "SpiderMonkey not found.")
    else(SPIDERMONKEY_FIND_REQUIRED)
        message(STATUS "SpiderMonkey not found.")
    endif(SPIDERMONKEY_FIND_REQUIRED)
endif(SPIDERMONKEY_INCLUDE_DIR AND SPIDERMONKEY_BASE_LIBRARY)
